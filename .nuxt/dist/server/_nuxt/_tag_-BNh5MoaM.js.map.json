{"file":"_tag_-BNh5MoaM.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGO,SAAS,2BAA2B;AACzC,QAAM,EAAE,KAAM,IAAG,WAAY;AAC7B,QAAM,SAAS,mBAAmB,OAAO;AAEzC,QAAM,QAAQ,IAAI,EAAE;AACpB,QAAM,cAAc,IAAI,CAAC;AACzB,QAAM,WAAW,IAAI,CAAC;AACtB,QAAM,UAAU,IAAI,CAAC;AACrB,QAAM,aAAa,IAAI,CAAC;AACxB,QAAM,eAAe,IAAI,IAAI;AAE7B,QAAM,aAAa,OAAO,MAAM,IAAG,OAAO,MAAM;AAGjD,YAAQ,IAAI,gBAAkB,GAAG;AAE9B,QAAI;AAEF,YAAM,SAAS;AAAA,QACb;AAAA,QACA,UAAU,QAAQ;AAAA,MACnB;AAGD,UAAI,KACP;AACK,eAAO,MAAM;AACnB,cAAM;AAAA,MACD;AAEL,cAAK;AAID,YAAM,WAAW,MAAM,KAAK,IAAI,GAAG,MAAM,mBAAmB,GAAG,IAAI,EAAE,OAAM,CAAE;AAC7E,YAAM,QAAQ,SAAS,KAAK,MAAM;AAClC,kBAAY,QAAQ,SAAS,KAAK,MAAM;AACxC,eAAS,QAAQ,SAAS,KAAK,MAAM;AACrC,iBAAW,QAAQ,SAAS,KAAK,MAAM;AAAA,IACxC,SACG,OACP;AACK,cAAQ,MAAM,oBAAoB,MAAM,WAAW,MAAM,SAAS,OAAO,MAAM,OAAO;AAAA,IACvF,UACL;AAEE,mBAAa,QAAQ;AAAA,IACrB;AAAA,EAEC;AAED,QAAM,aAAa,CAAC,MAAM,MAAK,SAAS;AAEtC,QAAI,OAAO,KAAK,QAAQ,SAAS,OAAO;AACtC,iBAAW,KAAM,IAAI;AAAA,IACtB;AAAA,EACF;AAGD,QAAM,cAAc,SAAS,MAAM;AACjC,QAAI,QAAQ,CAAE;AACd,aAAS,IAAI,GAAG,KAAK,SAAS,OAAO,KAAK;AACxC,YAAM,KAAK,CAAC;AAAA,IACb;AACD,WAAO;AAAA,EACX,CAAG;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACH;AAAA,EACE;AACH;;;;;AC7Ee,cAAW;AAC1B,UAAM,QAAQ,SAAU;AAQxB,UAAM,EAAE,OAAO,aAAa,UAAU,YAAY,aAAa,cAAe,WAAY,IAAG,yBAA0B;AAGvH,UAAM,MAAM,MAAM,OAAO;AAIzB,YAAQ;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,QACJ;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAAA,QACD;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAAA,QACD;AAAA,UACE,UAAU;AAAA,UACV,SAAS;AAAA,QACV;AAAA,QACD;AAAA,UACE,UAAU;AAAA,UACV,SAAS;AAAA,QACV;AAAA,MACF;AAAA,IACH,CAAC;AAQD,UAAM,MAAM,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../composables/useProdtagopenpagination.js","../../../../pages/prod/tagg/[tag].vue"],"sourcesContent":["import { ref, computed } from 'vue'\r\nimport { useRuntimeConfig, useNuxtApp } from '#imports'\r\n\r\nexport function useProdtagopenpagination() {\r\n  const { $api } = useNuxtApp()\r\n  const apiUrl = useRuntimeConfig().public.apiBaseUrl\r\n\r\n  const prods = ref([])\r\n  const currentPage = ref(1)\r\n  const lastPage = ref(1)\r\n  const perPage = ref(9)\r\n  const totalProds = ref(0)\r\n  const loadingprods = ref(true) \r\n\r\n  const fetchProds = async (tag = '',page = 1) => {\r\n\t  \r\n\t  \r\n\tconsole.log('the tag is ' +   tag)\r\n\t  \r\n    try {\r\n      // Build the query parameters\r\n      const params = {\r\n        page: page,\r\n        per_page: perPage.value\r\n      }\r\n\r\n      // Include catid if provided\r\n      if (tag) \r\n\t  {\r\n        params.tag = tag\r\n\t\ttag = tag\r\n      }\r\n\t  else\r\n\t\ttag =''\r\n\t\r\n\r\n\t\r\n      const response = await $api.get(`${apiUrl}/prod/viewbytag/${tag}`, { params })\r\n      prods.value = response.data.prods.data\r\n      currentPage.value = response.data.prods.current_page\r\n      lastPage.value = response.data.prods.last_page\r\n      totalProds.value = response.data.prods.total\r\n    } \r\n\tcatch (error) \r\n\t{\r\n      console.error('Error fetching :', error.response ? error.response.data : error.message)\r\n    }\r\n\tfinally \r\n\t{\r\n\t\tloadingprods.value = false  // Set loading to false once data is fetched\r\n\t}\r\n\t\r\n  }\r\n\r\n  const changePage = (tag = null,page) => {\r\n\t\r\n    if (page > 0 && page <= lastPage.value) {\r\n      fetchProds(tag,  page) // Pass catid if needed\r\n    }\r\n  }\r\n\r\n  // Computed property for page numbers\r\n  const pageNumbers = computed(() => {\r\n    let pages = []\r\n    for (let i = 1; i <= lastPage.value; i++) {\r\n      pages.push(i)\r\n    }\r\n    return pages\r\n  })\r\n\r\n  return {\r\n    prods,\r\n    currentPage,\r\n    lastPage,\r\n    perPage,\r\n    totalProds,\r\n    fetchProds,\r\n    changePage,\r\n    pageNumbers,\r\n\tloadingprods\t\r\n  }\r\n}\r\n","<script setup>\r\nimport { ref, onMounted, watch, computed } from 'vue'\r\nimport { useRuntimeConfig, useNuxtApp } from '#imports'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nconst router = useRouter()\r\nconst route = useRoute()\r\nconst config = useRuntimeConfig()\r\n\r\nimport { useProdtagopenpagination } from '~/composables/useProdtagopenpagination'\r\n\r\n\r\nimport debounce from 'lodash/debounce'\r\n\r\nconst { prods, currentPage, lastPage, changePage, pageNumbers, loadingprods , fetchProds } = useProdtagopenpagination()\r\n\r\n\r\nconst tag = route.params.tag\r\n\r\nimport { useHead } from 'nuxt/app'\r\n\r\nuseHead({\r\n  title: 'Nuxt3 Laravel 11 MySQl API Products Page',\r\n  meta: [\r\n    {\r\n      name: 'description',\r\n      content: 'Nuxt3 Laravel 11 MySQl API Products Page'\r\n    },\r\n    {\r\n      name: 'keywords',\r\n      content: 'Nuxt3 Laravel 11 MySQl API Products Page, MySQL, PHP 8, Web Development,  VueJS 3, JavaScript, Web Development Armenia, Web Developer Lebanon'\r\n    },\r\n    {\r\n      property: 'og:title',\r\n      content: 'Nuxt3 Laravel 11 MySQl API Products Page'\r\n    },\r\n    {\r\n      property: 'og:description',\r\n      content: 'Nuxt3 Laravel 11 MySQl API Products Page'\r\n    },\r\n  ]\r\n})\r\n\r\nonMounted(async () => {\r\n\r\n  await fetchProds(tag)\r\n  new WOW().init()\r\n})\r\n\r\nconst key = ref(0)\r\n\r\n\r\n</script>\r\n\r\n<template>\r\n\t<div class=\"container-xxl py-1\">\r\n\t\t<div class=\"container\">\r\n\t\t\t<h1 class=\"text-center mb-1 wow fadeInUp\" data-wow-delay=\"0.1s\">Products</h1>\r\n\t\t\t<h2 class=\"text-center mb-1 \"> <p> By TAG: {{tag }} </p> </h2>\r\n\t\t\t<div v-if=\"loadingprods\" class=\"row g-4\">\r\n\t\t\t\tLoading...\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div v-else>\r\n\t\t\t\r\n\t\t\t<div class=\"row g-4\" v-if=\"prods && prods.length > 0\">\r\n\t\t\t\t<Prodsopen\r\n\t\t\t\t  :prods=\"prods\" \r\n\t\t\t\t  :currentPage=\"currentPage\" \r\n\t\t\t\t  :lastPage=\"lastPage\" \r\n\t\t\t\t  :changePage=\"changePage\" \r\n\t\t\t\t  :pageNumbers=\"pageNumbers\" \r\n\t\t\t\t  :tag=\"tag\" \r\n\t\t\t\t  :key=\"key.value\" \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div  v-else class=\"row g-4\">\r\n\t\t\t\tNothing found\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t</div>\r\n\t\t\r\n\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t</div>\r\n</template>"],"version":3}