{"file":"useProdopenpagination-BgsRXDej.js","mappings":";;AAGO,SAAS,wBAAwB;AACtC,QAAM,EAAE,KAAM,IAAG,WAAY;AAC7B,QAAM,SAAS,mBAAmB,OAAO;AAEzC,QAAM,QAAQ,IAAI,EAAE;AACpB,QAAM,cAAc,IAAI,CAAC;AACzB,QAAM,WAAW,IAAI,CAAC;AACtB,QAAM,UAAU,IAAI,CAAC;AACrB,QAAM,aAAa,IAAI,CAAC;AACxB,QAAM,eAAe,IAAI,IAAI;AAE7B,QAAM,aAAa,OAAO,QAAQ,IAAI,QAAQ,IAAG,OAAO,MAAM;AAE5D,QAAI;AAEF,YAAM,SAAS;AAAA,QACb;AAAA,QACA,UAAU,QAAQ;AAAA,MACnB;AAGD,UAAI,OACP;AACK,eAAO,QAAQ;AACrB,gBAAQ;AAAA,MACH;AAEL,gBAAO;AAEN,UAAI,OACJ;AACK,eAAO,QAAQ;AACrB,gBAAQ;AAAA,MACH;AAEL,gBAAO;AACN,UAAI,WAAW;AACf,UAAG,SAAQ,MAAM,SAAS,IAC1B;AACD,mBAAW,MAAM,KAAK,IAAI,GAAG,MAAM,cAAc,KAAK,IAAI,KAAK,IAAI,EAAE,OAAM,CAAE;AAAA,MAC3E,WACO,SAAQ,MAAM,SAAS,IAC/B;AACD,mBAAW,MAAM,KAAK,IAAI,GAAG,MAAM,cAAc,KAAK,KAAK,EAAE,OAAM,CAAE;AAAA,MACnE,OAED;AACC,mBAAW,MAAM,KAAK,IAAI,GAAG,MAAM,cAAc,EAAE,QAAQ;AAAA,MAC3D;AAEE,YAAM,QAAQ,SAAS,KAAK,MAAM;AACrC,cAAQ,IAAI,2DAA2D,SAAS,KAAK,MAAM,IAAI;AAC5F,kBAAY,QAAQ,SAAS,KAAK,MAAM;AACxC,eAAS,QAAQ,SAAS,KAAK,MAAM;AACrC,iBAAW,QAAQ,SAAS,KAAK,MAAM;AAAA,IACxC,SACG,OACP;AACK,cAAQ,MAAM,iCAAiC,MAAM,WAAW,MAAM,SAAS,OAAO,MAAM,OAAO;AAAA,IACpG,UACL;AAEE,mBAAa,QAAQ;AAAA,IACrB;AAAA,EAEC;AAED,QAAM,aAAa,CAAC,QAAQ,MAAK,QAAQ,MAAK,SAAS;AAErD,QAAI,OAAO,KAAK,QAAQ,SAAS,OAAO;AACtC,iBAAW,OAAO,OAAO,IAAI;AAAA,IAC9B;AAAA,EACF;AAGD,QAAM,cAAc,SAAS,MAAM;AACjC,QAAI,QAAQ,CAAE;AACd,aAAS,IAAI,GAAG,KAAK,SAAS,OAAO,KAAK;AACxC,YAAM,KAAK,CAAC;AAAA,IACb;AACD,WAAO;AAAA,EACX,CAAG;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACH;AAAA,EACE;AACH;","names":[],"sources":["../../../../composables/useProdopenpagination.js"],"sourcesContent":["import { ref, computed } from 'vue'\r\nimport { useRuntimeConfig, useNuxtApp } from '#imports'\r\n\r\nexport function useProdopenpagination() {\r\n  const { $api } = useNuxtApp()\r\n  const apiUrl = useRuntimeConfig().public.apiBaseUrl\r\n\r\n  const prods = ref([])\r\n  const currentPage = ref(1)\r\n  const lastPage = ref(1)\r\n  const perPage = ref(9)\r\n  const totalProds = ref(0)\r\n  const loadingprods = ref(true) \r\n\r\n  const fetchProds = async (catid = '', subid = '',page = 1) => {\r\n\t  \r\n    try {\r\n      // Build the query parameters\r\n      const params = {\r\n        page: page,\r\n        per_page: perPage.value\r\n      }\r\n\r\n      // Include catid if provided\r\n      if (catid) \r\n\t  {\r\n        params.catid = catid\r\n\t\tcatid = catid\r\n      }\r\n\t  else\r\n\t\tcatid =''\r\n\t\r\n\t  if (subid) \r\n\t  {\r\n        params.subid = subid\r\n\t\tsubid = subid\r\n      }\r\n\t  else\r\n\t\tsubid =''\r\n\t  let response = ''\r\n\t  if(catid !=\"\" && subid != \"\")\r\n\t  {\r\n\t\tresponse = await $api.get(`${apiUrl}/prod/view/${catid}/${subid}`, { params })\r\n\t  }\r\n\t  else if(catid !=\"\" && subid == \"\")\r\n\t  {\r\n\t\tresponse = await $api.get(`${apiUrl}/prod/view/${catid}}`, { params })\r\n\t  }\r\n\t  else\r\n\t  {  \r\n\t\t  response = await $api.get(`${apiUrl}/prod/view`, { params })\r\n\t  }\r\n\t  \r\n      prods.value = response.data.prods.data\r\n\t  console.log('product view page from pridctopenpagination composable' + response.data.prods.data)\r\n      currentPage.value = response.data.prods.current_page\r\n      lastPage.value = response.data.prods.last_page\r\n      totalProds.value = response.data.prods.total\r\n    } \r\n\tcatch (error) \r\n\t{\r\n      console.error('Error fetching subcategories:', error.response ? error.response.data : error.message)\r\n    }\r\n\tfinally \r\n\t{\r\n\t\tloadingprods.value = false  // Set loading to false once data is fetched\r\n\t}\r\n\t\r\n  }\r\n\r\n  const changePage = (catid = null,subid = null,page) => {\r\n\t\r\n    if (page > 0 && page <= lastPage.value) {\r\n      fetchProds(catid, subid, page) // Pass catid if needed\r\n    }\r\n  }\r\n\r\n  // Computed property for page numbers\r\n  const pageNumbers = computed(() => {\r\n    let pages = []\r\n    for (let i = 1; i <= lastPage.value; i++) {\r\n      pages.push(i)\r\n    }\r\n    return pages\r\n  })\r\n\r\n  return {\r\n    prods,\r\n    currentPage,\r\n    lastPage,\r\n    perPage,\r\n    totalProds,\r\n    fetchProds,\r\n    changePage,\r\n    pageNumbers,\r\n\tloadingprods\t\r\n  }\r\n}\r\n"],"version":3}